---
import homelandLogo from "../assets/logo.svg";

export interface Props {
  menuItems?: Array<{
    label: string;
    href: string;
    active?: boolean;
  }>;
  logo?: {
    src: string;
    alt: string;
    href: string;
    text: string;
  };
}

// Get current pathname
const currentPath = Astro.url.pathname;

const {
  menuItems = [
    { label: "Home", href: "/", active: currentPath === "/" },
    { label: "us", href: "/us", active: currentPath === "/us" },
  ],
  logo = {
    src: homelandLogo.src,
    alt: "Homeland momo Logo",
    href: "https://highlandmomo.ca",
    text: "Homeland Momo",
  },
} = Astro.props;
---

<header>
  <nav class="bg-white border-gray-200 px-4 lg:px-6 py-2.5 dark:bg-gray-800">
    <div
      class="flex flex-wrap justify-between items-center mx-auto max-w-screen-xl"
    >
      <a href={logo.href} class="flex items-center">
        <img src={logo.src} class="mr-3 h-6 sm:h-9" alt={logo.alt} />
        <span
          class="self-center text-xl font-semibold whitespace-nowrap dark:text-white"
          >{logo.text}</span
        >
      </a>
      <div class="flex items-center">
        <button
          id="mobile-menu-toggle"
          type="button"
          class="inline-flex items-center p-2 ml-1 text-sm text-gray-500 rounded-lg lg:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
          aria-controls="mobile-menu-2"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg
            id="menu-icon"
            class="w-6 h-6"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
            ><path
              fill-rule="evenodd"
              d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
              clip-rule="evenodd"></path></svg
          >
          <svg
            id="close-icon"
            class="hidden w-6 h-6"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
            ><path
              fill-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
              clip-rule="evenodd"></path></svg
          >
        </button>
      </div>
      <div
        class="hidden justify-between items-center w-full lg:flex lg:w-auto lg:order-1"
        id="mobile-menu-2"
      >
        <ul
          class="flex flex-col mt-4 font-medium lg:flex-row lg:space-x-8 lg:mt-0"
        >
          {
            menuItems.map((item) => (
              <li>
                <a
                  href={item.href}
                  class={`block py-2 pr-4 pl-3 ${
                    item.active
                      ? "text-green-600 lg:text-green-600 lg:bg-transparent lg:p-0 dark:text-green-400"
                      : "text-gray-700 border-b border-gray-100 hover:bg-gray-50 lg:hover:bg-transparent lg:border-0 lg:hover:text-green-600 lg:p-0 dark:text-gray-400 lg:dark:hover:text-green-400 dark:hover:bg-gray-700 dark:hover:text-white lg:dark:hover:bg-transparent dark:border-gray-700"
                  }`}
                  aria-current={item.active ? "page" : undefined}
                >
                  {item.label}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle functionality
  const mobileMenuToggle = document.getElementById("mobile-menu-toggle");
  const mobileMenu = document.getElementById("mobile-menu-2");
  const menuIcon = document.getElementById("menu-icon");
  const closeIcon = document.getElementById("close-icon");

  if (mobileMenuToggle && mobileMenu && menuIcon && closeIcon) {
    mobileMenuToggle.addEventListener("click", () => {
      const isHidden = mobileMenu.classList.contains("hidden");

      if (isHidden) {
        // Show menu
        mobileMenu.classList.remove("hidden");
        menuIcon.classList.add("hidden");
        closeIcon.classList.remove("hidden");
        mobileMenuToggle.setAttribute("aria-expanded", "true");
      } else {
        // Hide menu
        mobileMenu.classList.add("hidden");
        menuIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
        mobileMenuToggle.setAttribute("aria-expanded", "false");
      }
    });
  }
</script>
